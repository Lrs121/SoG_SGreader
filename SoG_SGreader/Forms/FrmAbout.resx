<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rAAAAABJRU5ErkJggg==
</value>
  </data>
</root>